{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf360
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww25020\viewh15120\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\f0\fs36 \cf0 CompilationUnit 	:: = \{"import" Identifier \{"." Identifier\} ";"\} \{ClassDeclaration\}.\
ClassDeclaration ::= ["public"] "class" Identifier ["extends" Identifier] "\{" \{FieldDeclaration | MethodDeclaration\} "\}".\
FieldDeclaration ::= [Visibility] ["static"] Type Identifier ";".\
MethodDeclaration ::= [Visibility] ["static"] ("void" | Type) Identifier "("[Parameter \{"," Parameter\}] ")" Body.\
Visibility ::= "private" | "public" | "private".\
Parameter ::= Type Identifier.\
Body ::= "\{" \{LocalDeclaration\} \{Statement\} "\}".\
LocalDeclaration ::= Type Identifier ";".\
Statement ::= Assignment | IfStatement | WhileStatement | ReturnStatement | CallStatement | PrintStatement | Block\
Assignment ::= Identifier ["." Identifier | "[" Expression "]" ] "=" Expression ";"\
IfStatement ::= "if" "(" Relation ")" Statement ["else" Statement].\
WhileStatement ::= "while" "(" Relation ")" Statement .\
ReturnStatement ::= "return" [Expression] ";"\
CallStatement ::= Identifier ["." Identifier] "(" [Expression \{"," Expression\}]")" ";".\
PrintStatement ::= "print" "(" Expression ")" ";".\
Block ::= "\{" \{Statement\} "\}".\
Relation ::= Expression ("<" | ">" | "==" | "!=") Expression.\
Expression ::= ["+" | "-"] Term \{("+"|"-") Term\}.\
Term ::= Factor \{("*" |"/") Factor.\
Factor ::= Number | Identifier | ["." Identifier" | "[" Expression "]" ] | "null" | "new" Identifier "(" ")" | "new" ("int" | Identifier) "[" Expression "]".\
Type ::= ("int" | Identifier) ["[" "]"] .\
\
\
\
--------Assume that a class must be imported before it is used --------------\
-------Identifier and number are defined as in Pascal0----------}